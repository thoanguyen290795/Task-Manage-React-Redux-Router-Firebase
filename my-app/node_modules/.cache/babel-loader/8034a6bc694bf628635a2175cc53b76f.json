{"ast":null,"code":"var _jsxFileName = \"/Users/thoanguyen/Desktop/React Zendvn/Firebase/Task Manager/my-app/src/Components/Notify.js\";\nimport React, { Component } from 'react';\nimport { AlertContainer, Alert } from \"react-bs-notifier\";\nimport { connect } from 'react-redux';\nimport { actHideNotify } from './../actions/index';\n\nclass Notify extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDismiss = () => {\n      this.props.handleDismiss();\n    };\n\n    this.state = {\n      isShow: true\n    };\n  }\n\n  render() {\n    let {\n      isShow\n    } = this.state;\n    let {\n      item\n    } = this.props;\n    let {\n      style,\n      title,\n      content\n    } = this.props.item;\n    if (content === '' && isShow === false) return null;\n    return /*#__PURE__*/React.createElement(AlertContainer, {\n      position: \"top-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      headline: title,\n      timeout: 2000,\n      type: style,\n      onDismiss: this.handleDismiss,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, content));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    item: state.notify\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleDismiss: () => {\n      dispatch(actHideNotify());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notify);","map":{"version":3,"sources":["/Users/thoanguyen/Desktop/React Zendvn/Firebase/Task Manager/my-app/src/Components/Notify.js"],"names":["React","Component","AlertContainer","Alert","connect","actHideNotify","Notify","constructor","props","handleDismiss","state","isShow","render","item","style","title","content","mapStateToProps","notify","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,EAAwBC,KAAxB,QAAqC,mBAArC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,oBAA5B;;AACA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAC3BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAMlBC,aANkB,GAMF,MAAK;AAClB,WAAKD,KAAL,CAAWC,aAAX;AACF,KARiB;;AAEd,SAAKC,KAAL,GAAW;AACPC,MAAAA,MAAM,EAAC;AADA,KAAX;AAGH;;AAIDC,EAAAA,MAAM,GAAG;AACL,QAAI;AAACD,MAAAA;AAAD,QAAW,KAAKD,KAApB;AACA,QAAI;AAACG,MAAAA;AAAD,QAAS,KAAKL,KAAlB;AACA,QAAI;AAACM,MAAAA,KAAD;AAAOC,MAAAA,KAAP;AAAaC,MAAAA;AAAb,QAAwB,KAAKR,KAAL,CAAWK,IAAvC;AACA,QAAGG,OAAO,KAAG,EAAV,IAAcL,MAAM,KAAG,KAA1B,EAAiC,OAAO,IAAP;AACjC,wBACI,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAEI,KAAjB;AAAwB,MAAA,OAAO,EAAE,IAAjC;AAAuC,MAAA,IAAI,EAAED,KAA7C;AAAoD,MAAA,SAAS,EAAE,KAAKL,aAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIO,OADJ,CADJ,CADJ;AAOH;;AAtB0B;;AAwB/B,MAAMC,eAAe,GAAGP,KAAK,IAAG;AAC/B,SAAO;AACNG,IAAAA,IAAI,EAACH,KAAK,CAACQ;AADL,GAAP;AAGA,CAJD;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,IAAY;AACnC,SAAO;AACHX,IAAAA,aAAa,EAAC,MAAI;AAClBW,MAAAA,QAAQ,CAACf,aAAa,EAAd,CAAR;AACD;AAHI,GAAP;AAKD,CANH;;AASA,eAAeD,OAAO,CAACa,eAAD,EAAiBE,kBAAjB,CAAP,CAA4Cb,MAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { AlertContainer,Alert } from \"react-bs-notifier\";\nimport {connect} from 'react-redux';\nimport {actHideNotify} from './../actions/index';\nclass Notify extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            isShow:true\n        }\n    }\n    handleDismiss = () =>{\n       this.props.handleDismiss()\n    }\n    render() {\n        let {isShow} = this.state; \n        let {item} = this.props;\n        let {style,title,content} = this.props.item;\n        if(content===''&&isShow===false) return null; \n        return (\n            <AlertContainer position=\"top-left\" >\n                <Alert headline={title} timeout={2000} type={style} onDismiss={this.handleDismiss} >\n                   {content}\n                </Alert>\n            </AlertContainer>\n        );\n    }\n}\nconst mapStateToProps = state =>{\n\treturn {\n\t\titem:state.notify\n\t}\n}\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        handleDismiss:()=>{\n        dispatch(actHideNotify())\n      }\n    }\n  }\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Notify)\n"]},"metadata":{},"sourceType":"module"}