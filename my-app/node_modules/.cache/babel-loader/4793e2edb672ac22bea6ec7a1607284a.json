{"ast":null,"code":"var _jsxFileName = \"/Users/thoanguyen/Desktop/React Zendvn/Firebase/Task Manager/my-app/src/Components/TaskFinishList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TaskFinishItem from './../Components/TaskFinishItem';\nimport { tasksCompletedRef } from './../firebase';\n\nclass TaskFinishList extends Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.state = {\n      items: [],\n      s\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    tasksCompletedRef.on('value', items => {\n      let data = [];\n      items.forEach(item => {\n        const {\n          email,\n          name\n        } = item.val();\n        data.push({\n          email,\n          name,\n          key: item.key\n        });\n      });\n      this.setState({\n        items: data\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    let {\n      items\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel panel-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"panel-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, \"Task Finish\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }\n    }, this.showElementBody(items)));\n  }\n\n  showElementBody(items) {\n    let xhml = null;\n\n    if (items.length > 0) {\n      xhml = items.map((item, index) => {\n        return /*#__PURE__*/React.createElement(TaskFinishItem, {\n          key: index,\n          item: item,\n          index: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }\n        });\n      });\n      return xhml;\n    } else {\n      return /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }\n      }, \"Loading\");\n    }\n  }\n\n}\n\nexport default TaskFinishList;","map":{"version":3,"sources":["/Users/thoanguyen/Desktop/React Zendvn/Firebase/Task Manager/my-app/src/Components/TaskFinishList.js"],"names":["React","Component","connect","TaskFinishItem","tasksCompletedRef","TaskFinishList","constructor","props","_isMounted","state","items","s","componentDidMount","on","data","forEach","item","email","name","val","push","key","setState","componentWillUnmount","render","showElementBody","xhml","length","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,SAAQC,iBAAR,QAAgC,eAAhC;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAErCK,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AADgB,SADlBC,UACkB,GADL,KACK;AAEhB,SAAKC,KAAL,GAAW;AACTC,MAAAA,KAAK,EAAC,EADG;AACAC,MAAAA;AADA,KAAX;AAGD;;AACDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKJ,UAAL,GAAkB,IAAlB;AACAJ,IAAAA,iBAAiB,CAACS,EAAlB,CAAqB,OAArB,EAA6BH,KAAK,IAAG;AACnC,UAAII,IAAI,GAAG,EAAX;AACFJ,MAAAA,KAAK,CAACK,OAAN,CAAcC,IAAI,IAAE;AAClB,cAAM;AAACC,UAAAA,KAAD;AAAOC,UAAAA;AAAP,YAAeF,IAAI,CAACG,GAAL,EAArB;AAEJL,QAAAA,IAAI,CAACM,IAAL,CAAU;AAACH,UAAAA,KAAD;AAAOC,UAAAA,IAAP;AAAYG,UAAAA,GAAG,EAACL,IAAI,CAACK;AAArB,SAAV;AACG,OAJD;AAKA,WAAKC,QAAL,CAAc;AACZZ,QAAAA,KAAK,EAACI;AADM,OAAd;AAGC,KAVD;AAUI;;AAENS,EAAAA,oBAAoB,GAAE;AACpB,SAAKf,UAAL,GAAkB,KAAlB;AACH;;AAEGgB,EAAAA,MAAM,GAAG;AACP,QAAI;AAACd,MAAAA;AAAD,QAAU,KAAKD,KAAnB;AAEE,wBAES;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADD,eAGC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAMgB,eAAN,CAAsBf,KAAtB,CADF,CAHD,CAFT;AAWH;;AACDe,EAAAA,eAAe,CAACf,KAAD,EAAO;AACpB,QAAIgB,IAAI,GAAG,IAAX;;AACA,QAAGhB,KAAK,CAACiB,MAAN,GAAc,CAAjB,EAAmB;AACjBD,MAAAA,IAAI,GAAGhB,KAAK,CAACkB,GAAN,CAAU,CAACZ,IAAD,EAAMa,KAAN,KAAc;AAE3B,4BAAQ,oBAAC,cAAD;AAAiB,UAAA,GAAG,EAAEA,KAAtB;AAA6B,UAAA,IAAI,EAAEb,IAAnC;AAAyC,UAAA,KAAK,EAAEa,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAEH,OAJM,CAAP;AAKA,aAAOH,IAAP;AACD,KAPD,MAOO;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AAAwB;AAC3B;;AApDkC;;AAwDvC,eAAerB,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport TaskFinishItem from './../Components/TaskFinishItem';\nimport {tasksCompletedRef} from './../firebase';\n\nclass TaskFinishList extends Component {\n  _isMounted = false;\n  constructor(props){ \n    super(props);\n    this.state={\n      items:[],s\n    }\n  }\n  componentDidMount(){\n    this._isMounted = true;\n    tasksCompletedRef.on('value',items =>{\n      let data = [];\n    items.forEach(item=>{\n      const {email,name} = item.val();\n   \n  data.push({email,name,key:item.key})\n    })\n    this.setState({\n      items:data,\n    })\n    }) }\n\n  componentWillUnmount(){\n    this._isMounted = false;\n}\n  \n    render() {\n      let {items} = this.state;  \n\n        return (\n           \n                 <div className=\"panel panel-success\">\n                  <div className=\"panel-heading\">\n                    <h3 className=\"panel-title\">Task Finish</h3></div>\n                  <div className=\"panel-body\">\n                   {this. showElementBody(items)}\n                  </div>\n          \n                </div>\n        );\n    }\n    showElementBody(items){\n      let xhml = null;\n      if(items.length >0){\n        xhml = items.map((item,index)=>{\n     \n            return  <TaskFinishItem  key={index} item={item} index={index}/>\n         \n        })\n        return xhml \n      } else {\n        return <h4>Loading</h4>}\n    }\n}\n\n\nexport default TaskFinishList;\n\n"]},"metadata":{},"sourceType":"module"}