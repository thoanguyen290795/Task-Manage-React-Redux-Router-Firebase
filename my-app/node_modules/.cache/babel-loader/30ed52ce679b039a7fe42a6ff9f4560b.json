{"ast":null,"code":"var _jsxFileName = \"/Users/thoanguyen/Desktop/React Zendvn/Firebase/Task Manager/my-app/src/Components/TaskFinishList.js\";\nimport React, { Component } from 'react';\nimport TaskFinishItem from './../Components/TaskFinishItem';\nimport TaskFinishItemAdmin from './../Components/TaskFinishItemAdmin';\nimport { tasksCompletedRef } from './../firebase';\n\nclass TaskFinishList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    tasksCompletedRef.on('value', items => {\n      let data = [];\n      items.forEach(item => {\n        const {\n          email,\n          name\n        } = item.val();\n        data.push({\n          email,\n          name,\n          key: item.key\n        });\n      });\n      this.setState({\n        items: data\n      });\n    });\n  }\n\n  render() {\n    let {\n      items\n    } = this.state;\n    let isAdmin = false;\n    console.log(items);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel panel-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"panel-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, \"Task Finish\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }\n    }, this.showElementBody(items, isAdmin)));\n  }\n\n  showElementBody(items, isAdmin) {\n    let xhml = null;\n\n    if (items.length > 0) {\n      xhml = item.map((item, index) => {\n        if (isAdmin === true) {\n          return /*#__PURE__*/React.createElement(TaskFinishItemAdmin, {\n            key: index,\n            item: item,\n            index: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }\n          });\n        } else {\n          return /*#__PURE__*/React.createElement(TaskFinishItem, {\n            key: index,\n            item: item,\n            index: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }\n          });\n        }\n      });\n      return xhml;\n    } else {\n      return /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }\n      }, \"Loading\");\n    }\n  }\n\n}\n\nexport default TaskFinishList;","map":{"version":3,"sources":["/Users/thoanguyen/Desktop/React Zendvn/Firebase/Task Manager/my-app/src/Components/TaskFinishList.js"],"names":["React","Component","TaskFinishItem","TaskFinishItemAdmin","tasksCompletedRef","TaskFinishList","constructor","props","state","items","componentDidMount","on","data","forEach","item","email","name","val","push","key","setState","render","isAdmin","console","log","showElementBody","xhml","length","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,mBAAP,MAAgC,qCAAhC;AACA,SAAQC,iBAAR,QAAgC,eAAhC;;AACA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AACrCK,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,KAAK,EAAC;AADG,KAAX;AAGD;;AACDC,EAAAA,iBAAiB,GAAE;AACjBN,IAAAA,iBAAiB,CAACO,EAAlB,CAAqB,OAArB,EAA6BF,KAAK,IAAG;AACnC,UAAIG,IAAI,GAAG,EAAX;AACFH,MAAAA,KAAK,CAACI,OAAN,CAAcC,IAAI,IAAE;AAClB,cAAM;AAACC,UAAAA,KAAD;AAAOC,UAAAA;AAAP,YAAeF,IAAI,CAACG,GAAL,EAArB;AACAL,QAAAA,IAAI,CAACM,IAAL,CAAU;AAACH,UAAAA,KAAD;AAAOC,UAAAA,IAAP;AAAYG,UAAAA,GAAG,EAACL,IAAI,CAACK;AAArB,SAAV;AACD,OAHD;AAIA,WAAKC,QAAL,CAAc;AACZX,QAAAA,KAAK,EAACG;AADM,OAAd;AAGC,KATD;AASG;;AACHS,EAAAA,MAAM,GAAG;AACP,QAAI;AAACZ,MAAAA;AAAD,QAAU,KAAKD,KAAnB;AACA,QAAIc,OAAO,GAAG,KAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACE,wBAES;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADD,eAGC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAMgB,eAAN,CAAsBhB,KAAtB,EAA4Ba,OAA5B,CADF,CAHD,CAFT;AAUH;;AACDG,EAAAA,eAAe,CAAChB,KAAD,EAAOa,OAAP,EAAe;AAC5B,QAAII,IAAI,GAAG,IAAX;;AACA,QAAGjB,KAAK,CAACkB,MAAN,GAAc,CAAjB,EAAmB;AACjBD,MAAAA,IAAI,GAAGZ,IAAI,CAACc,GAAL,CAAS,CAACd,IAAD,EAAMe,KAAN,KAAc;AAC5B,YAAGP,OAAO,KAAK,IAAf,EAAoB;AAClB,8BAAQ,oBAAC,mBAAD;AAAqB,YAAA,GAAG,EAAEO,KAA1B;AAAiC,YAAA,IAAI,EAAEf,IAAvC;AAA6C,YAAA,KAAK,EAAEe,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACD,SAFD,MAEO;AACL,8BAAQ,oBAAC,cAAD;AAAgB,YAAA,GAAG,EAAEA,KAArB;AAA4B,YAAA,IAAI,EAAEf,IAAlC;AAAwC,YAAA,KAAK,EAAEe,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACD;AACF,OANM,CAAP;AAOA,aAAOH,IAAP;AACD,KATD,MASO;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AAAwB;AAC3B;;AA9CkC;;AAiDvC,eAAerB,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport TaskFinishItem from './../Components/TaskFinishItem';\nimport TaskFinishItemAdmin from './../Components/TaskFinishItemAdmin';\nimport {tasksCompletedRef} from './../firebase';\nclass TaskFinishList extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      items:[]\n    }\n  }\n  componentDidMount(){\n    tasksCompletedRef.on('value',items =>{\n      let data = [];\n    items.forEach(item=>{\n      const {email,name} = item.val();\n      data.push({email,name,key:item.key})\n    })\n    this.setState({\n      items:data\n    })\n    })}\n    render() {\n      let {items} = this.state;  \n      let isAdmin = false; \n      console.log(items);\n        return (\n           \n                 <div className=\"panel panel-success\">\n                  <div className=\"panel-heading\">\n                    <h3 className=\"panel-title\">Task Finish</h3></div>\n                  <div className=\"panel-body\">\n                   {this. showElementBody(items,isAdmin)}\n                  </div>\n                </div>\n        );\n    }\n    showElementBody(items,isAdmin){\n      let xhml = null;\n      if(items.length >0){\n        xhml = item.map((item,index)=>{\n          if(isAdmin === true){\n            return  <TaskFinishItemAdmin key={index} item={item} index={index}/>\n          } else {\n            return  <TaskFinishItem key={index} item={item} index={index}/>\n          }\n        })\n        return xhml \n      } else {\n        return <h4>Loading</h4>}\n    }\n}\n\nexport default TaskFinishList;\n"]},"metadata":{},"sourceType":"module"}