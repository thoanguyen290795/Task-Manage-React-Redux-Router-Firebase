{"ast":null,"code":"var _jsxFileName = \"/Users/thoanguyen/Desktop/React Zendvn/Firebase/Task Manager/my-app/src/Components/TaskDoingItem.js\";\nimport React, { Component } from 'react';\nimport { tasksCompletedRef } from '../firebase';\nimport { connect } from 'react-redux';\nimport { tasksRef } from '../firebase';\nimport { actChangeNotify } from './../actions/index';\n\nclass TaskDoingItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleCompleted = item => {\n      //remove khỏi task \n      tasksRef.child(item.key).remove(); //add taskCOmpleted\n\n      tasksCompletedRef.push(item);\n      this.props.handleCompleted(notify.NOTI_TYPE_SUCESS, notify.NOTI_ADD_TASK_TITLE, notify.NOTI_ADD_TASK_MESSAGE);\n    };\n  }\n\n  render() {\n    let {\n      item\n    } = {\n      name: '',\n      email: ''\n    };\n    item = this.props.item !== '' ? this.props.item : item;\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"glyphicon glyphicon-user\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 34\n      }\n    }), \"\\xA0\", item.email), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleCompleted(item),\n      type: \"button\",\n      className: \"btn btn-warning btn-xs float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, \"Completed\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleCompleted: (style, title, content) => {\n      dispatch(actChangeNotify(style, title, content));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(TaskDoingItem);","map":{"version":3,"sources":["/Users/thoanguyen/Desktop/React Zendvn/Firebase/Task Manager/my-app/src/Components/TaskDoingItem.js"],"names":["React","Component","tasksCompletedRef","connect","tasksRef","actChangeNotify","TaskDoingItem","handleCompleted","item","child","key","remove","push","props","notify","NOTI_TYPE_SUCESS","NOTI_ADD_TASK_TITLE","NOTI_ADD_TASK_MESSAGE","render","name","email","mapDispatchToProps","dispatch","style","title","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,iBAAR,QAAgC,aAAhC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,eAAR,QAA8B,oBAA9B;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAClCM,eADkC,GACjBC,IAAD,IAAQ;AACpB;AACAJ,MAAAA,QAAQ,CAACK,KAAT,CAAeD,IAAI,CAACE,GAApB,EAAyBC,MAAzB,GAFoB,CAGpB;;AACAT,MAAAA,iBAAiB,CAACU,IAAlB,CAAuBJ,IAAvB;AACA,WAAKK,KAAL,CAAWN,eAAX,CAA2BO,MAAM,CAACC,gBAAlC,EAAmDD,MAAM,CAACE,mBAA1D,EAA8EF,MAAM,CAACG,qBAArF;AACH,KAPiC;AAAA;;AAQlCC,EAAAA,MAAM,GAAG;AACP,QAAI;AAACV,MAAAA;AAAD,QAAQ;AAACW,MAAAA,IAAI,EAAC,EAAN;AAASC,MAAAA,KAAK,EAAC;AAAf,KAAZ;AACAZ,IAAAA,IAAI,GAAI,KAAKK,KAAL,CAAWL,IAAX,KAAoB,EAArB,GAA0B,KAAKK,KAAL,CAAWL,IAArC,GAA0CA,IAAjD;AACE,wBACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACd;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBA,IAAI,CAACW,IAA1B,CADc,eAEd;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyB;AAAM,MAAA,SAAS,EAAC,0BAAhB;AAA2C,qBAAY,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,UAAgGX,IAAI,CAACY,KAArG,CAFc,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAI,KAAKb,eAAL,CAAqBC,IAArB,CAArB;AAAgD,MAAA,IAAI,EAAC,QAArD;AAA8D,MAAA,SAAS,EAAC,oCAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,CADZ,CADF;AASH;;AApBiC;;AAsBtC,MAAMa,kBAAkB,GAAIC,QAAD,IAAY;AACrC,SAAO;AACLf,IAAAA,eAAe,EAAC,CAACgB,KAAD,EAAOC,KAAP,EAAaC,OAAb,KAAuB;AACrCH,MAAAA,QAAQ,CAACjB,eAAe,CAACkB,KAAD,EAAOC,KAAP,EAAaC,OAAb,CAAhB,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAOA,eAAetB,OAAO,CAAC,IAAD,EAAMkB,kBAAN,CAAP,CAAiCf,aAAjC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {tasksCompletedRef} from '../firebase';\nimport {connect} from 'react-redux';\nimport {tasksRef} from '../firebase';\nimport {actChangeNotify} from './../actions/index';\n\nclass TaskDoingItem extends Component {\n    handleCompleted=(item)=>{\n        //remove khỏi task \n        tasksRef.child(item.key).remove();\n        //add taskCOmpleted\n        tasksCompletedRef.push(item); \n        this.props.handleCompleted(notify.NOTI_TYPE_SUCESS,notify.NOTI_ADD_TASK_TITLE,notify.NOTI_ADD_TASK_MESSAGE)\n    }\n    render() {\n      let {item}= {name:'',email:''};\n      item = (this.props.item !== '')? this.props.item:item;\n        return (\n          <ul className=\"list-group\">  \n                      <li className=\"list-group-item\">\n        <p className=\"task\">{item.name}</p>\n        <span className=\"author\"><span className=\"glyphicon glyphicon-user\" aria-hidden=\"true\" />&nbsp;{item.email}</span>\n                        <button onClick={()=>this.handleCompleted(item)}type=\"button\" className=\"btn btn-warning btn-xs float-right\">Completed</button>\n                      </li>\n                    </ul>\n        );\n    }\n}\nconst mapDispatchToProps = (dispatch)=>{\n  return {\n    handleCompleted:(style,title,content)=>{\n      dispatch(actChangeNotify(style,title,content))\n    }\n  }\n}\nexport default connect(null,mapDispatchToProps)(TaskDoingItem)\n\n"]},"metadata":{},"sourceType":"module"}